const contractAddress = 'app.js';
const contractABI = [
    // ABI generated by the Solidity compiler for the contract
    {
        "inputs": [],
        "name": "getValue",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_value",
                "type": "uint256"
            }
        ],
        "name": "setValue",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "incrementValue",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "newValue",
                "type": "uint256"
            }
        ],
        "name": "ValueChanged",
        "type": "event"
    }
];

let web3;
let simpleContract;

async function init() {
    if (window.ethereum) {
        web3 = new Web3(window.ethereum);
        await window.ethereum.request({ method: 'eth_requestAccounts' });
    } else {
        alert('Please install MetaMask to use this dApp!');
    }

    simpleContract = new web3.eth.Contract(contractABI, contractAddress);
}

async function setValue() {
    const value = document.getElementById('valueInput').value;
    const accounts = await web3.eth.getAccounts();
    await simpleContract.methods.setValue(value).send({ from: accounts[0] });
}

async function getValue() {
    const value = await simpleContract.methods.getValue().call();
    document.getElementById('valueDisplay').innerText = 'Value: ' + value;
}

async function incrementValue() {
    const accounts = await web3.eth.getAccounts();
    await simpleContract.methods.incrementValue().send({ from: accounts[0] });
}

window.onload = init;
